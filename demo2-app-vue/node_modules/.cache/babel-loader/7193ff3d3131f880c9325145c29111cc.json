{"remainingRequest":"/Applications/MAMP/htdocs/my_obj/demo2-app-vue/node_modules/babel-loader/lib/index.js!/Applications/MAMP/htdocs/my_obj/demo2-app-vue/node_modules/eslint-loader/index.js??ref--13-0!/Applications/MAMP/htdocs/my_obj/demo2-app-vue/src/main.js","dependencies":[{"path":"/Applications/MAMP/htdocs/my_obj/demo2-app-vue/src/main.js","mtime":1596001161571},{"path":"/Applications/MAMP/htdocs/my_obj/demo2-app-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/MAMP/htdocs/my_obj/demo2-app-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Applications/MAMP/htdocs/my_obj/demo2-app-vue/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Applications/MAMP/htdocs/my_obj/demo2-app-vue/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"/Applications/MAMP/htdocs/my_obj/demo2-app-vue/node_modules/core-js/modules/es6.array.iterator.js\";\nimport \"/Applications/MAMP/htdocs/my_obj/demo2-app-vue/node_modules/core-js/modules/es6.promise.js\";\nimport \"/Applications/MAMP/htdocs/my_obj/demo2-app-vue/node_modules/core-js/modules/es6.object.assign.js\";\nimport \"/Applications/MAMP/htdocs/my_obj/demo2-app-vue/node_modules/core-js/modules/es7.promise.finally.js\";\n\n// micro-app-vue/src/public-path.js\nif (window.__POWERED_BY_QIANKUN__) {\n  // 动态设置 webpack publicPath，防止资源加载出错\n  // eslint-disable-next-line no-undef\n  __webpack_public_path__ = window.__INJECTED_PUBLIC_PATH_BY_QIANKUN__;\n} // micro-app-vue/src/main.js\n\n\nimport Vue from \"vue\"; //   import VueRouter from \"vue-router\";\n//   import \"./public-path\";\n\nimport App from \"./App.vue\";\nimport routes from \"./routes\"; //   Vue.use(VueRouter);\n\nVue.config.productionTip = false;\nvar instance = null;\nvar router = null;\n/**\n * 渲染函数\n * 两种情况：主应用生命周期钩子中运行 / 微应用单独启动时运行\n */\n\nfunction render() {\n  // 在 render 中创建 VueRouter，可以保证在卸载微应用时，移除 location 事件监听，防止事件污染\n  router = new VueRouter({\n    // 运行在主应用中时，添加路由命名空间 /vue\n    base: window.__POWERED_BY_QIANKUN__ ? \"/vue2\" : \"/\",\n    mode: \"history\",\n    routes: routes\n  }); // 挂载应用\n\n  instance = new Vue({\n    router: router,\n    render: function render(h) {\n      return h(App);\n    }\n  }).$mount(\"#app\");\n} // 独立运行时，直接挂载应用\n\n\nif (!window.__POWERED_BY_QIANKUN__) {\n  render();\n}\n/**\n * bootstrap 只会在微应用初始化的时候调用一次，下次微应用重新进入时会直接调用 mount 钩子，不会再重复触发 bootstrap。\n * 通常我们可以在这里做一些全局变量的初始化，比如不会在 unmount 阶段被销毁的应用级别的缓存等。\n */\n\n\nexport function bootstrap() {\n  return _bootstrap.apply(this, arguments);\n}\n/**\n * 应用每次进入都会调用 mount 方法，通常我们在这里触发应用的渲染方法\n */\n\nfunction _bootstrap() {\n  _bootstrap = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"VueMicroApp bootstraped\");\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _bootstrap.apply(this, arguments);\n}\n\nexport function mount(_x) {\n  return _mount.apply(this, arguments);\n}\n/**\n * 应用每次 切出/卸载 会调用的方法，通常在这里我们会卸载微应用的应用实例\n */\n\nfunction _mount() {\n  _mount = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(props) {\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log(\"VueMicroApp mount\", props);\n            render(props);\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _mount.apply(this, arguments);\n}\n\nexport function unmount() {\n  return _unmount.apply(this, arguments);\n}\n\nfunction _unmount() {\n  _unmount = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            console.log(\"VueMicroApp unmount\");\n            instance.$destroy();\n            instance = null;\n            router = null;\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _unmount.apply(this, arguments);\n}",{"version":3,"sources":["/Applications/MAMP/htdocs/my_obj/demo2-app-vue/src/main.js"],"names":["window","__POWERED_BY_QIANKUN__","__webpack_public_path__","__INJECTED_PUBLIC_PATH_BY_QIANKUN__","Vue","App","routes","config","productionTip","instance","router","render","VueRouter","base","mode","h","$mount","bootstrap","console","log","mount","props","unmount","$destroy"],"mappings":";;;;;;;AAAA;AACA,IAAIA,MAAM,CAACC,sBAAX,EAAmC;AAC/B;AACA;AACAC,EAAAA,uBAAuB,GAAGF,MAAM,CAACG,mCAAjC;AACD,C,CAED;;;AACA,OAAOC,GAAP,MAAgB,KAAhB,C,CACF;AAEA;;AACE,OAAOC,GAAP;AACA,OAAOC,MAAP,iB,CAEF;;AACEF,GAAG,CAACG,MAAJ,CAAWC,aAAX,GAA2B,KAA3B;AAEA,IAAIC,QAAQ,GAAG,IAAf;AACA,IAAIC,MAAM,GAAG,IAAb;AAEA;;;;;AAIA,SAASC,MAAT,GAAkB;AAChB;AACAD,EAAAA,MAAM,GAAG,IAAIE,SAAJ,CAAc;AACrB;AACAC,IAAAA,IAAI,EAAEb,MAAM,CAACC,sBAAP,GAAgC,OAAhC,GAA0C,GAF3B;AAGrBa,IAAAA,IAAI,EAAE,SAHe;AAIrBR,IAAAA,MAAM,EAANA;AAJqB,GAAd,CAAT,CAFgB,CAShB;;AACAG,EAAAA,QAAQ,GAAG,IAAIL,GAAJ,CAAQ;AACnBM,IAAAA,MAAM,EAANA,MADmB;AAEjBC,IAAAA,MAAM,EAAE,gBAACI,CAAD;AAAA,aAAOA,CAAC,CAACV,GAAD,CAAR;AAAA;AAFS,GAAR,EAGRW,MAHQ,CAGD,MAHC,CAAX;AAID,C,CAED;;;AACA,IAAI,CAAChB,MAAM,CAACC,sBAAZ,EAAoC;AAClCU,EAAAA,MAAM;AACP;AAED;;;;;;AAIA,gBAAsBM,SAAtB;AAAA;AAAA;AAIA;;;;;uEAJO;AAAA;AAAA;AAAA;AAAA;AACLC,YAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAOP,gBAAsBC,KAAtB;AAAA;AAAA;AAKA;;;;;mEALO,kBAAqBC,KAArB;AAAA;AAAA;AAAA;AAAA;AACLH,YAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCE,KAAjC;AACAV,YAAAA,MAAM,CAACU,KAAD,CAAN;;AAFK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAQP,gBAAsBC,OAAtB;AAAA;AAAA;;;qEAAO;AAAA;AAAA;AAAA;AAAA;AACLJ,YAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAV,YAAAA,QAAQ,CAACc,QAAT;AACAd,YAAAA,QAAQ,GAAG,IAAX;AACAC,YAAAA,MAAM,GAAG,IAAT;;AAJK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["// micro-app-vue/src/public-path.js\nif (window.__POWERED_BY_QIANKUN__) {\n    // 动态设置 webpack publicPath，防止资源加载出错\n    // eslint-disable-next-line no-undef\n    __webpack_public_path__ = window.__INJECTED_PUBLIC_PATH_BY_QIANKUN__;\n  }\n  \n  // micro-app-vue/src/main.js\n  import Vue from \"vue\";\n//   import VueRouter from \"vue-router\";\n  \n//   import \"./public-path\";\n  import App from \"./App.vue\";\n  import routes from \"./routes\";\n  \n//   Vue.use(VueRouter);\n  Vue.config.productionTip = false;\n  \n  let instance = null;\n  let router = null;\n  \n  /**\n   * 渲染函数\n   * 两种情况：主应用生命周期钩子中运行 / 微应用单独启动时运行\n   */\n  function render() {\n    // 在 render 中创建 VueRouter，可以保证在卸载微应用时，移除 location 事件监听，防止事件污染\n    router = new VueRouter({\n      // 运行在主应用中时，添加路由命名空间 /vue\n      base: window.__POWERED_BY_QIANKUN__ ? \"/vue2\" : \"/\",\n      mode: \"history\",\n      routes\n    });\n  \n    // 挂载应用\n    instance = new Vue({\n    router,\n      render: (h) => h(App),\n    }).$mount(\"#app\");\n  }\n  \n  // 独立运行时，直接挂载应用\n  if (!window.__POWERED_BY_QIANKUN__) {\n    render();\n  }\n  \n  /**\n   * bootstrap 只会在微应用初始化的时候调用一次，下次微应用重新进入时会直接调用 mount 钩子，不会再重复触发 bootstrap。\n   * 通常我们可以在这里做一些全局变量的初始化，比如不会在 unmount 阶段被销毁的应用级别的缓存等。\n   */\n  export async function bootstrap() {\n    console.log(\"VueMicroApp bootstraped\");\n  }\n  \n  /**\n   * 应用每次进入都会调用 mount 方法，通常我们在这里触发应用的渲染方法\n   */\n  export async function mount(props) {\n    console.log(\"VueMicroApp mount\", props);\n    render(props);\n  }\n  \n  /**\n   * 应用每次 切出/卸载 会调用的方法，通常在这里我们会卸载微应用的应用实例\n   */\n  export async function unmount() {\n    console.log(\"VueMicroApp unmount\");\n    instance.$destroy();\n    instance = null;\n    router = null;\n  }"]}]}